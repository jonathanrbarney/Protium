# Generated by Django 2.1.1 on 2018-09-15 22:09

import cis.models
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import phonenumber_field.modelfields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('usafa_id', models.CharField(max_length=6, primary_key=True, serialize=False, unique=True, validators=[django.core.validators.MinLengthValidator(6)])),
                ('usafa_id_backup', models.CharField(max_length=6, unique=True, validators=[django.core.validators.MinLengthValidator(6)])),
                ('first_name', models.CharField(blank=True, max_length=25)),
                ('middle_name', models.CharField(blank=True, max_length=25)),
                ('email_verified', models.BooleanField(default=False)),
                ('official_email_verified', models.BooleanField(default=False)),
                ('official_phone_verified', models.BooleanField(default=False)),
                ('phone_verified', models.BooleanField(default=False)),
                ('last_name', models.CharField(blank=True, max_length=25)),
                ('dob', models.DateField(blank=True)),
                ('email', models.EmailField(max_length=248, unique=True)),
                ('official_email', models.EmailField(blank=True, max_length=248)),
                ('official_phone_number', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128)),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128)),
                ('gender', models.CharField(blank=True, choices=[('M', 'Male'), ('F', 'Female')], max_length=1)),
                ('room_number', models.CharField(max_length=5)),
                ('building', models.CharField(choices=[('Vandenberg Hall', 'Vandenberg Hall'), ('Sijan Hall', 'Sijan Hall'), ('Fairchild Hall', 'Fairchild Hall'), ('Harmon Hall', 'Harmon Hall'), ('Mitchell Hall', 'Mitchell Hall'), ('Arnold Hall', 'Arnold Hall')], max_length=30)),
                ('last_four', models.CharField(blank=True, max_length=4, validators=[django.core.validators.MinLengthValidator(4)])),
                ('SSN', models.CharField(blank=True, max_length=128)),
                ('class_year', models.CharField(blank=True, max_length=4, validators=[django.core.validators.MinLengthValidator(4)])),
                ('profile_pic', models.ImageField(blank=True, null=True, upload_to=cis.models.Account.user_directory_path)),
                ('academic_advisor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='advisees', to=settings.AUTH_USER_MODEL)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'ordering': ['last_name', 'first_name', 'middle_name'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Admin_Excusal',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('number', models.IntegerField()),
                ('from_time', models.DateTimeField()),
                ('to_time', models.DateTimeField()),
                ('created_time', models.DateTimeField()),
                ('approved_time', models.DateTimeField(blank=True)),
                ('reason', models.TextField()),
                ('is_emergency', models.BooleanField(default=False)),
                ('restrictions', models.CharField(blank=True, max_length=300)),
                ('approver', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='admin_excusal_aproved', to=settings.AUTH_USER_MODEL)),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='admin_excusal_created', to=settings.AUTH_USER_MODEL)),
                ('members', models.ManyToManyField(related_name='admin_excusal_member', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='AFT',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('score', models.DecimalField(decimal_places=2, max_digits=5)),
                ('creator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='AMI',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('score', models.DecimalField(decimal_places=2, max_digits=5)),
                ('creator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Board',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=1000)),
                ('description', models.TextField()),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('is_archived', models.BooleanField(default=False)),
                ('creator', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='boards', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=1000)),
                ('summary', models.TextField()),
                ('academic_credit_hours', models.DecimalField(blank=True, decimal_places=2, max_digits=3, null=True)),
                ('military_credit_hours', models.DecimalField(blank=True, decimal_places=2, max_digits=3, null=True)),
                ('athletic_credit_hours', models.DecimalField(blank=True, decimal_places=2, max_digits=3, null=True)),
                ('archived', models.BooleanField(default=False)),
                ('coerequisites', models.ManyToManyField(blank=True, related_name='_course_coerequisites_+', to='cis.Course')),
                ('creator', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='courses_created', to=settings.AUTH_USER_MODEL)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('instructors', models.ManyToManyField(related_name='instructed_courses', to=settings.AUTH_USER_MODEL)),
                ('managers', models.ManyToManyField(related_name='managed_courses', to=settings.AUTH_USER_MODEL)),
                ('prerequisites', models.ManyToManyField(blank=True, related_name='_course_prerequisites_+', to='cis.Course')),
            ],
        ),
        migrations.CreateModel(
            name='Course_Instance',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('number_grade', models.DecimalField(decimal_places=4, max_digits=6)),
                ('letter_grade_current', models.CharField(choices=[('A', 'A'), ('A-', 'A-'), ('B+', 'B+'), ('B', 'B'), ('B-', 'B-'), ('C+', 'C+'), ('C', 'C'), ('C-', 'C-'), ('D', 'D'), ('F', 'Fail'), ('IC', 'Incomplete Controllable'), ('IU', 'Incomplete Uncontrollable'), ('W', 'Withdrawn'), ('WP', 'Withdrawn Passing'), ('WF', 'Withdrawn Failing'), ('P', 'Passing'), ('N', 'No Grade')], max_length=2)),
                ('letter_grade_final', models.CharField(blank=True, choices=[('A', 'A'), ('A-', 'A-'), ('B+', 'B+'), ('B', 'B'), ('B-', 'B-'), ('C+', 'C+'), ('C', 'C'), ('C-', 'C-'), ('D', 'D'), ('F', 'Fail'), ('IC', 'Incomplete Controllable'), ('IU', 'Incomplete Uncontrollable'), ('W', 'Withdrawn'), ('WP', 'Withdrawn Passing'), ('WF', 'Withdrawn Failing'), ('P', 'Passing'), ('N', 'No Grade')], max_length=2, null=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cis.Course')),
            ],
        ),
        migrations.CreateModel(
            name='Course_Requirement',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=300)),
                ('courses_satisfy', models.ManyToManyField(related_name='requirements_satisfied', to='cis.Course')),
            ],
        ),
        migrations.CreateModel(
            name='Day_Type',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=1000)),
            ],
        ),
        migrations.CreateModel(
            name='Day_Type_Instance',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('date', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=300)),
                ('faculty', models.ManyToManyField(related_name='department_faculty', to=settings.AUTH_USER_MODEL)),
                ('instructors', models.ManyToManyField(related_name='department_instructor', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='FM18_Type',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=128)),
            ],
        ),
        migrations.CreateModel(
            name='Form_18',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('from_time', models.DateTimeField()),
                ('to_time', models.DateTimeField()),
                ('created_time', models.DateTimeField()),
                ('name', models.CharField(max_length=128)),
                ('summary', models.TextField()),
                ('creator', models.ForeignKey(limit_choices_to={'is_MDG': True}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='form_18_created', to=settings.AUTH_USER_MODEL)),
                ('member', models.ForeignKey(limit_choices_to={'is_Cadet': True}, on_delete=django.db.models.deletion.CASCADE, related_name='form_18_member', to=settings.AUTH_USER_MODEL)),
                ('members', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
                ('type', models.ManyToManyField(to='cis.FM18_Type')),
            ],
        ),
        migrations.CreateModel(
            name='Membership',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PAI',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('score', models.DecimalField(decimal_places=2, max_digits=5)),
                ('creator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Period',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=1000)),
            ],
        ),
        migrations.CreateModel(
            name='Period_Slot',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('from_time', models.TimeField()),
                ('to_time', models.TimeField()),
                ('period', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='slots', to='cis.Period')),
            ],
        ),
        migrations.CreateModel(
            name='PFT',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('score', models.DecimalField(decimal_places=2, max_digits=5)),
                ('creator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Position',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=128)),
                ('is_cadet_job', models.BooleanField(default=True)),
                ('holder', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='jobs', to=settings.AUTH_USER_MODEL)),
                ('supervisor', models.ManyToManyField(blank=True, related_name='_position_supervisor_+', to='cis.Position')),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('is_anonymous', models.BooleanField(default=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('is_archived', models.BooleanField(default=False)),
                ('message', models.TextField(blank=True)),
                ('color', models.CharField(choices=[('#940f15', '#940f15'), ('#a4b6c1', '#a4b6c1'), ('#2e598f', '#2e598f'), ('#0c2141', '#0c2141')], default=('#940f15', '#940f15'), max_length=7)),
                ('board', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='posts', to='cis.Board')),
                ('creator', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='posts', to=settings.AUTH_USER_MODEL)),
                ('reply_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='cis.Post')),
            ],
        ),
        migrations.CreateModel(
            name='Program',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('formal_name', models.CharField(max_length=300)),
                ('informal_name', models.CharField(max_length=300)),
                ('type', models.CharField(choices=[('Major', 'Major'), ('Minor', 'Minor'), ('Core', 'Core'), ('Scholars', 'Scholars'), ('Military', 'Military'), ('Athletic', 'Athletic')], max_length=100)),
                ('summary', models.TextField()),
                ('credit_requirement', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('cadets', models.ManyToManyField(related_name='programs', to=settings.AUTH_USER_MODEL)),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='cis.Department')),
            ],
        ),
        migrations.CreateModel(
            name='Program_Schedule',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('profile', models.OneToOneField(blank=True, limit_choices_to={'is_Cadet': True}, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Program_Schedule_Template',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=300)),
            ],
        ),
        migrations.CreateModel(
            name='Rating',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('rating', models.DecimalField(decimal_places=1, max_digits=3)),
                ('ratee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Rating_Table',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('Membership', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cis.Membership')),
                ('ratings', models.ManyToManyField(related_name='rating_table', to='cis.Rating')),
            ],
        ),
        migrations.CreateModel(
            name='SAMI',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('score', models.DecimalField(decimal_places=2, max_digits=5)),
                ('creator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SCA',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('number', models.IntegerField()),
                ('from_time', models.DateTimeField()),
                ('to_time', models.DateTimeField()),
                ('created_time', models.DateTimeField()),
                ('approved_time', models.DateTimeField(blank=True)),
                ('name', models.CharField(max_length=128)),
                ('summary', models.TextField()),
                ('is_emergency', models.BooleanField(default=False)),
                ('approver', models.ForeignKey(blank=True, limit_choices_to={'is_SCA': True}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sca_approved', to=settings.AUTH_USER_MODEL)),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sca_created', to=settings.AUTH_USER_MODEL)),
                ('members', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SCA_Restriction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('restriction', models.CharField(max_length=128)),
            ],
        ),
        migrations.CreateModel(
            name='Schedule',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=1000)),
                ('day_type', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='cis.Day_Type')),
            ],
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('auditors', models.ManyToManyField(related_name='audited', to=settings.AUTH_USER_MODEL)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cis.Course')),
                ('creator', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sections_created', to=settings.AUTH_USER_MODEL)),
                ('instructor', models.ManyToManyField(related_name='section_instructed', to=settings.AUTH_USER_MODEL)),
                ('period', models.ManyToManyField(related_name='sections', to='cis.Period')),
                ('students', models.ManyToManyField(related_name='sections', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Section_Instance',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('day_type_instance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='section_instances', to='cis.Day_Type_Instance')),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cis.Section')),
            ],
        ),
        migrations.CreateModel(
            name='Term',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('sequence_number', models.IntegerField(unique=True)),
                ('name', models.CharField(max_length=1000)),
            ],
        ),
        migrations.CreateModel(
            name='Term_Instance',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('GPA_Final', models.DecimalField(blank=True, decimal_places=2, max_digits=3, null=True)),
                ('MPA_Final', models.DecimalField(blank=True, decimal_places=2, max_digits=3, null=True)),
                ('PEA_Final', models.DecimalField(blank=True, decimal_places=2, max_digits=3, null=True)),
                ('program_schedule', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='term_instances', to='cis.Program_Schedule')),
                ('term', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cis.Term')),
            ],
        ),
        migrations.CreateModel(
            name='Term_Template',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=300)),
                ('term_sequence_number', models.IntegerField()),
                ('courses', models.ManyToManyField(to='cis.Course')),
            ],
        ),
        migrations.CreateModel(
            name='Unit',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=128)),
                ('commanders', models.ManyToManyField(related_name='units_commanded', to='cis.Position')),
                ('members', models.ManyToManyField(related_name='units_member', through='cis.Membership', to=settings.AUTH_USER_MODEL)),
                ('positions', models.ManyToManyField(related_name='units', to='cis.Position')),
            ],
        ),
        migrations.CreateModel(
            name='Vote',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('message', models.TextField()),
                ('creator', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='votes', to=settings.AUTH_USER_MODEL)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='votes', to='cis.Post')),
            ],
        ),
        migrations.AddField(
            model_name='section',
            name='term',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sections', to='cis.Term'),
        ),
        migrations.AddField(
            model_name='sca',
            name='restrictions',
            field=models.ManyToManyField(blank=True, to='cis.SCA_Restriction'),
        ),
        migrations.AddField(
            model_name='sami',
            name='term_instance',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cis.Term_Instance'),
        ),
        migrations.AddField(
            model_name='rating_table',
            name='term',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cis.Term_Instance'),
        ),
        migrations.AddField(
            model_name='position',
            name='unit',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cis.Unit'),
        ),
        migrations.AddField(
            model_name='pft',
            name='term_instance',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cis.Term_Instance'),
        ),
        migrations.AddField(
            model_name='period_slot',
            name='schedule',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='slots', to='cis.Schedule'),
        ),
        migrations.AddField(
            model_name='pai',
            name='term_instance',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cis.Term_Instance'),
        ),
        migrations.AddField(
            model_name='membership',
            name='unit',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cis.Unit'),
        ),
        migrations.AddField(
            model_name='course_requirement',
            name='program',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cis.Program'),
        ),
        migrations.AddField(
            model_name='course_instance',
            name='program_schedule',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cis.Program_Schedule'),
        ),
        migrations.AddField(
            model_name='course_instance',
            name='term_instance',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='course_instances', to='cis.Term_Instance'),
        ),
        migrations.AddField(
            model_name='course',
            name='terms_offered',
            field=models.ManyToManyField(blank=True, related_name='courses', to='cis.Term'),
        ),
        migrations.AddField(
            model_name='ami',
            name='term_instance',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cis.Term_Instance'),
        ),
        migrations.AddField(
            model_name='aft',
            name='term_instance',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cis.Term_Instance'),
        ),
    ]
