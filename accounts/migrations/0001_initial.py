# Generated by Django 2.1.1 on 2019-01-24 20:46

import accounts.models
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import phonenumber_field.modelfields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('usafa_id', models.CharField(max_length=6, unique=True, validators=[django.core.validators.MinLengthValidator(6)])),
                ('usafa_id_backup', models.CharField(max_length=6, unique=True, validators=[django.core.validators.MinLengthValidator(6)])),
                ('discus_id', models.CharField(max_length=25, unique=True)),
                ('first_name', models.CharField(blank=True, max_length=25)),
                ('middle_name', models.CharField(blank=True, max_length=25)),
                ('email_verified', models.BooleanField(default=False)),
                ('official_email_verified', models.BooleanField(default=False)),
                ('official_phone_verified', models.BooleanField(default=False)),
                ('phone_verified', models.BooleanField(default=False)),
                ('last_name', models.CharField(blank=True, max_length=25)),
                ('dob', models.DateField(blank=True, null=True)),
                ('email', models.EmailField(max_length=248, unique=True)),
                ('official_email', models.EmailField(blank=True, max_length=248)),
                ('official_phone_number', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128)),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128)),
                ('gender', models.CharField(blank=True, choices=[('M', 'Male'), ('F', 'Female'), ('A', 'Attack Helicopter')], max_length=1)),
                ('room_number', models.CharField(max_length=5)),
                ('building', models.CharField(choices=[('Vandenberg Hall', 'Vandenberg Hall'), ('Sijan Hall', 'Sijan Hall'), ('Fairchild Hall', 'Fairchild Hall'), ('Harmon Hall', 'Harmon Hall'), ('Mitchell Hall', 'Mitchell Hall'), ('Arnold Hall', 'Arnold Hall')], max_length=30)),
                ('last_four', models.CharField(blank=True, max_length=4, validators=[django.core.validators.MinLengthValidator(4)])),
                ('SSN', models.CharField(blank=True, max_length=128)),
                ('class_year', models.CharField(blank=True, max_length=4, validators=[django.core.validators.MinLengthValidator(4)])),
                ('profile_pic', models.ImageField(blank=True, null=True, upload_to=accounts.models.Account.user_directory_path)),
                ('academic_advisor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='advisees', to=settings.AUTH_USER_MODEL)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'ordering': ['last_name', 'first_name', 'middle_name'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
